#Neural networks 
#Initialize matrix where row number equals output number and column number equals input number
mutable struct Layer
  w::Array{Float64,2}
end

Layer(input::Int,output::Int)=Layer(rand(Float64,(output,input)))

#Function on the layer to calculate the output
(l::Layer)(x)=(l.w*x)

#Define 3 Layers

l1=Layer(3,4)
l1.w
l2=Layer(4,3)
l2.w
l3=Layer(3,1)
l3.w

#Define input vector

x=[5,7,9]

#Calculate the values

l1_values=l1(x)
l2_values=l2(l1_values)
y=l3(l2_values)

#We define a network

mutable struct Network
  layers 
  Network(layers...)=new(layers)
end

#Function does all the calculations on the nodes in just one call

(n::Network)(x)-(for l in n.layers;x-l(x);end;x)

nn=Network(l1,l2,l3)

#Checking layers 

nn.layers[1].w
nn.layers[2].w
nn.layers[3].w

#Final result

nn(x)
